{
    "id": "47968932-831c-46aa-a5f9-28286eb11caf",
    "icon": "ðŸ¤–",
    "icon_bg_color": "#FFD700",
    "data": {
        "nodes": [
            {
                "id": "ChatInput-sl6I7",
                "type": "genericNode",
                "position": {
                    "x": 1112.3539004984445,
                    "y": 1213.392084508518
                },
                "data": {
                    "type": "ChatInput",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional, Union\n\nfrom langflow.base.io.chat import ChatComponent\nfrom langflow.field_typing import Text\nfrom langflow.schema import Record\n\n\nclass ChatInput(ChatComponent):\n    display_name = \"Chat Input\"\n    description = \"Capture user inputs from the chat interface.\"\n    icon = \"ChatInput\"\n\n    def build(\n        self,\n        sender: Optional[str] = \"User\",\n        sender_name: Optional[str] = \"User\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n    ) -> Union[Text, Record]:\n        return super().build(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n        )\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "input_value": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Message",
                                "advanced": false,
                                "input_types": [
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "value": "Hello. I'm testing Langflow."
                            },
                            "return_record": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "return_record",
                                "display_name": "Return Record",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "sender": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "User",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Machine",
                                    "User"
                                ],
                                "name": "sender",
                                "display_name": "Sender Type",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "sender_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "User",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "sender_name",
                                "display_name": "Sender Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "session_id": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": false,
                                "dynamic": false,
                                "info": "If provided, the message will be stored in the memory.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "MySessionID"
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Capture user inputs from the chat interface.",
                        "icon": "ChatInput",
                        "base_classes": [
                            "Text",
                            "object",
                            "Record",
                            "str"
                        ],
                        "display_name": "Chat Input",
                        "documentation": "",
                        "custom_fields": {
                            "sender": null,
                            "sender_name": null,
                            "input_value": null,
                            "session_id": null,
                            "return_record": null
                        },
                        "output_types": [
                            "Text",
                            "Record"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "ChatInput-sl6I7"
                },
                "selected": false,
                "width": 384,
                "height": 477,
                "positionAbsolute": {
                    "x": 1112.3539004984445,
                    "y": 1213.392084508518
                },
                "dragging": false
            },
            {
                "id": "ChatOutput-8Ougj",
                "type": "genericNode",
                "position": {
                    "x": 3154.916355514023,
                    "y": 851.051882666333
                },
                "data": {
                    "type": "ChatOutput",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional, Union\n\nfrom langflow.base.io.chat import ChatComponent\nfrom langflow.field_typing import Text\nfrom langflow.schema import Record\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Used to send a chat message.\"\n    icon = \"ChatOutput\"\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine\",\n        sender_name: Optional[str] = \"AI\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n    ) -> Union[Text, Record]:\n        return super().build(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n        )\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "input_value": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Message",
                                "advanced": false,
                                "input_types": [
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "return_record": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "return_record",
                                "display_name": "Return Record",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "sender": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "Machine",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Machine",
                                    "User"
                                ],
                                "name": "sender",
                                "display_name": "Sender Type",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "sender_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "AI",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "sender_name",
                                "display_name": "Sender Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "session_id": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": false,
                                "dynamic": false,
                                "info": "If provided, the message will be stored in the memory.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "MySessionID"
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Used to send a chat message.",
                        "icon": "ChatOutput",
                        "base_classes": [
                            "Text",
                            "object",
                            "Record",
                            "str"
                        ],
                        "display_name": "Chat Output",
                        "documentation": "",
                        "custom_fields": {
                            "sender": null,
                            "sender_name": null,
                            "input_value": null,
                            "session_id": null,
                            "return_record": null
                        },
                        "output_types": [
                            "Text",
                            "Record"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "ChatOutput-8Ougj"
                },
                "selected": false,
                "width": 384,
                "height": 477,
                "dragging": false,
                "positionAbsolute": {
                    "x": 3154.916355514023,
                    "y": 851.051882666333
                }
            },
            {
                "id": "OpenAIModel-x9EFs",
                "type": "genericNode",
                "position": {
                    "x": 2553.8316129487075,
                    "y": 343.421875
                },
                "data": {
                    "type": "OpenAIModel",
                    "node": {
                        "template": {
                            "input_value": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langchain_openai import ChatOpenAI\n\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import NestedDict, Text\n\n\nclass OpenAIModelComponent(LCModelComponent):\n    display_name = \"OpenAI\"\n    description = \"Generates text using OpenAI's models.\"\n    icon = \"OpenAI\"\n\n    def build_config(self):\n        return {\n            \"input_value\": {\"display_name\": \"Input\"},\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n            \"stream\": {\n                \"display_name\": \"Stream\",\n                \"info\": \"Stream the response from the model.\",\n            },\n            \"system_message\": {\n                \"display_name\": \"System Message\",\n                \"info\": \"System message to pass to the model.\",\n            },\n        }\n\n    def build(\n        self,\n        input_value: Text,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n        stream: bool = False,\n        system_message: Optional[str] = None,\n    ) -> Text:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        output = ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n\n        return self.get_chat_result(output, stream, input_value, system_message)\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "max_tokens": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 256,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "max_tokens",
                                "display_name": "Max Tokens",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "model_kwargs": {
                                "type": "NestedDict",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": {},
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "model_kwargs",
                                "display_name": "Model Kwargs",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "model_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "gpt-4-1106-preview",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "gpt-4-turbo-preview",
                                    "gpt-4-0125-preview",
                                    "gpt-4-1106-preview",
                                    "gpt-4-vision-preview",
                                    "gpt-3.5-turbo-0125",
                                    "gpt-3.5-turbo-1106"
                                ],
                                "name": "model_name",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "openai_api_base": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "openai_api_base",
                                "display_name": "OpenAI API Base",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "openai_api_key": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": true,
                                "name": "openai_api_key",
                                "display_name": "OpenAI API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": true,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": ""
                            },
                            "stream": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "stream",
                                "display_name": "Stream",
                                "advanced": false,
                                "dynamic": false,
                                "info": "Stream the response from the model.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "system_message": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "system_message",
                                "display_name": "System Message",
                                "advanced": false,
                                "dynamic": false,
                                "info": "System message to pass to the model.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": ""
                            },
                            "temperature": {
                                "type": "float",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 0.7,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "temperature",
                                "display_name": "Temperature",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "rangeSpec": {
                                    "min": -1,
                                    "max": 1,
                                    "step": 0.1
                                },
                                "load_from_db": false,
                                "title_case": false
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Generates text using OpenAI's models.",
                        "icon": "OpenAI",
                        "base_classes": [
                            "Text",
                            "object",
                            "str"
                        ],
                        "display_name": "OpenAI",
                        "documentation": "",
                        "custom_fields": {
                            "input_value": null,
                            "max_tokens": null,
                            "model_kwargs": null,
                            "model_name": null,
                            "openai_api_base": null,
                            "openai_api_key": null,
                            "temperature": null,
                            "stream": null,
                            "system_message": null
                        },
                        "output_types": [
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "OpenAIModel-x9EFs"
                },
                "selected": false,
                "width": 384,
                "height": 913,
                "dragging": false
            },
            {
                "id": "Prompt-x4UbV",
                "type": "genericNode",
                "position": {
                    "x": 1892.0061350334602,
                    "y": 753.3797365481901
                },
                "data": {
                    "type": "Prompt",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from langchain_core.prompts import PromptTemplate\n\nfrom langflow.field_typing import Prompt, TemplateField, Text\nfrom langflow.interface.custom.custom_component import CustomComponent\n\n\nclass PromptComponent(CustomComponent):\n    display_name: str = \"Prompt\"\n    description: str = \"A component for creating prompt templates using dynamic variables.\"\n    icon = \"terminal-square\"\n\n    def build_config(self):\n        return {\n            \"template\": TemplateField(display_name=\"Template\"),\n            \"code\": TemplateField(advanced=True),\n        }\n\n    def build(\n        self,\n        template: Prompt,\n        **kwargs,\n    ) -> Text:\n        from langflow.base.prompts.utils import dict_values_to_string\n\n        prompt_template = PromptTemplate.from_template(Text(template))\n        kwargs = dict_values_to_string(kwargs)\n        kwargs = {k: \"\\n\".join(v) if isinstance(v, list) else v for k, v in kwargs.items()}\n        try:\n            formated_prompt = prompt_template.format(**kwargs)\n        except Exception as exc:\n            raise ValueError(f\"Error formatting prompt: {exc}\") from exc\n        self.status = f'Prompt:\\n\"{formated_prompt}\"'\n        return formated_prompt\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "template": {
                                "type": "prompt",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "{context}\n\nUser: {user_message}\nAnswer: ",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "template",
                                "display_name": "Template",
                                "advanced": false,
                                "input_types": [
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "_type": "CustomComponent",
                            "context": {
                                "field_type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "context",
                                "display_name": "context",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Text",
                                    "Record"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "type": "str"
                            },
                            "user_message": {
                                "field_type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "user_message",
                                "display_name": "user_message",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Text",
                                    "Record"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "type": "str"
                            }
                        },
                        "description": "A component for creating prompt templates using dynamic variables.",
                        "icon": "terminal-square",
                        "is_input": null,
                        "is_output": null,
                        "is_composition": null,
                        "base_classes": [
                            "Text",
                            "object",
                            "str"
                        ],
                        "name": "",
                        "display_name": "Prompt",
                        "documentation": "",
                        "custom_fields": {
                            "template": [
                                "context",
                                "user_message"
                            ]
                        },
                        "output_types": [
                            "Text"
                        ],
                        "full_path": null,
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false,
                        "error": null
                    },
                    "id": "Prompt-x4UbV",
                    "description": "A component for creating prompt templates using dynamic variables.",
                    "display_name": "Prompt"
                },
                "selected": false,
                "width": 384,
                "height": 497,
                "dragging": false
            },
            {
                "id": "ClearMessageHistory-0PRsd",
                "type": "genericNode",
                "position": {
                    "x": 533.7783090727098,
                    "y": 1337.0317891533189
                },
                "data": {
                    "type": "ClearMessageHistory",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from langflow.interface.custom.custom_component import CustomComponent\nfrom langflow.memory import delete_messages, get_messages\n\n\nclass ClearMessageHistoryComponent(CustomComponent):\n    display_name = \"Clear Message History\"\n    description = \"A component to clear the message history.\"\n    icon = \"ClearMessageHistory\"\n    beta: bool = True\n\n    def build_config(self):\n        return {\n            \"session_id\": {\n                \"display_name\": \"Session ID\",\n                \"info\": \"The session ID to clear the message history.\",\n            }\n        }\n\n    def build(\n        self,\n        session_id: str,\n    ) -> None:\n        delete_messages(session_id=session_id)\n        records = get_messages(session_id=session_id)\n        self.records = records\n        return records\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "session_id": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The session ID to clear the message history.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "MySessionID"
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "A component to clear the message history.",
                        "icon": "ClearMessageHistory",
                        "base_classes": [
                            "object",
                            "Data"
                        ],
                        "display_name": "Clear Message History",
                        "documentation": "",
                        "custom_fields": {
                            "session_id": null
                        },
                        "output_types": [
                            "Data"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": true
                    },
                    "id": "ClearMessageHistory-0PRsd"
                },
                "selected": false,
                "width": 384,
                "height": 289,
                "dragging": false
            },
            {
                "id": "MemoryComponent-6sJMc",
                "type": "genericNode",
                "position": {
                    "x": 1075.1020210727083,
                    "y": 751.9844364379504
                },
                "data": {
                    "type": "MemoryComponent",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langflow.field_typing import Text\nfrom langflow.helpers.record import records_to_text\nfrom langflow.interface.custom.custom_component import CustomComponent\nfrom langflow.memory import get_messages\n\n\nclass MemoryComponent(CustomComponent):\n    display_name = \"Chat Memory\"\n    description = \"Retrieves stored chat messages given a specific Session ID.\"\n    beta: bool = True\n    icon = \"history\"\n\n    def build_config(self):\n        return {\n            \"sender\": {\n                \"options\": [\"Machine\", \"User\", \"Machine and User\"],\n                \"display_name\": \"Sender Type\",\n            },\n            \"sender_name\": {\"display_name\": \"Sender Name\", \"advanced\": True},\n            \"n_messages\": {\n                \"display_name\": \"Number of Messages\",\n                \"info\": \"Number of messages to retrieve.\",\n                \"advanced\": True,\n            },\n            \"session_id\": {\n                \"display_name\": \"Session ID\",\n                \"info\": \"Session ID of the chat history.\",\n                \"input_types\": [\"Text\"],\n            },\n            \"order\": {\n                \"options\": [\"Ascending\", \"Descending\"],\n                \"display_name\": \"Order\",\n                \"info\": \"Order of the messages.\",\n                \"advanced\": True,\n            },\n            \"record_template\": {\n                \"display_name\": \"Record Template\",\n                \"multiline\": True,\n                \"info\": \"Template to convert Record to Text. If left empty, it will be dynamically set to the Record's text key.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine and User\",\n        sender_name: Optional[str] = None,\n        session_id: Optional[str] = None,\n        n_messages: int = 5,\n        order: Optional[str] = \"Descending\",\n        record_template: Optional[str] = \"{sender_name}: {text}\",\n    ) -> Text:\n        order = \"DESC\" if order == \"Descending\" else \"ASC\"\n        if sender == \"Machine and User\":\n            sender = None\n        messages = get_messages(\n            sender=sender,\n            sender_name=sender_name,\n            session_id=session_id,\n            limit=n_messages,\n            order=order,\n        )\n        messages_str = records_to_text(template=record_template, records=messages)\n        self.status = messages_str\n        return messages_str\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "n_messages": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 5,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "n_messages",
                                "display_name": "Number of Messages",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Number of messages to retrieve.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "order": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "Descending",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Ascending",
                                    "Descending"
                                ],
                                "name": "order",
                                "display_name": "Order",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Order of the messages.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "record_template": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "{sender_name}: {text}",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "record_template",
                                "display_name": "Record Template",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Template to convert Record to Text. If left empty, it will be dynamically set to the Record's text key.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "sender": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "Machine and User",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Machine",
                                    "User",
                                    "Machine and User"
                                ],
                                "name": "sender",
                                "display_name": "Sender Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "sender_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "sender_name",
                                "display_name": "Sender Name",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "session_id": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": false,
                                "input_types": [
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "Session ID of the chat history.",
                                "load_from_db": false,
                                "title_case": false,
                                "value": "MySessionID"
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Retrieves stored chat messages given a specific Session ID.",
                        "base_classes": [
                            "str",
                            "object",
                            "Text"
                        ],
                        "display_name": "Chat Memory",
                        "documentation": "",
                        "custom_fields": {
                            "sender": null,
                            "sender_name": null,
                            "session_id": null,
                            "n_messages": null,
                            "order": null,
                            "record_template": null
                        },
                        "output_types": [
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": true
                    },
                    "id": "MemoryComponent-6sJMc"
                },
                "selected": true,
                "width": 384,
                "height": 403,
                "dragging": false,
                "positionAbsolute": {
                    "x": 1075.1020210727083,
                    "y": 751.9844364379504
                }
            }
        ],
        "edges": [
            {
                "source": "ChatInput-sl6I7",
                "target": "Prompt-x4UbV",
                "sourceHandle": "{Å“baseClassesÅ“:[Å“TextÅ“,Å“objectÅ“,Å“RecordÅ“,Å“strÅ“],Å“dataTypeÅ“:Å“ChatInputÅ“,Å“idÅ“:Å“ChatInput-sl6I7Å“}",
                "targetHandle": "{Å“fieldNameÅ“:Å“user_messageÅ“,Å“idÅ“:Å“Prompt-x4UbVÅ“,Å“inputTypesÅ“:[Å“DocumentÅ“,Å“BaseOutputParserÅ“,Å“TextÅ“,Å“RecordÅ“],Å“typeÅ“:Å“strÅ“}",
                "id": "reactflow__edge-ChatInput-sl6I7{Å“baseClassesÅ“:[Å“TextÅ“,Å“objectÅ“,Å“RecordÅ“,Å“strÅ“],Å“dataTypeÅ“:Å“ChatInputÅ“,Å“idÅ“:Å“ChatInput-sl6I7Å“}-Prompt-x4UbV{Å“fieldNameÅ“:Å“user_messageÅ“,Å“idÅ“:Å“Prompt-x4UbVÅ“,Å“inputTypesÅ“:[Å“DocumentÅ“,Å“BaseOutputParserÅ“,Å“TextÅ“,Å“RecordÅ“],Å“typeÅ“:Å“strÅ“}",
                "data": {
                    "targetHandle": {
                        "fieldName": "user_message",
                        "id": "Prompt-x4UbV",
                        "inputTypes": [
                            "Document",
                            "BaseOutputParser",
                            "Text",
                            "Record"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Text",
                            "object",
                            "Record",
                            "str"
                        ],
                        "dataType": "ChatInput",
                        "id": "ChatInput-sl6I7"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 stroke-connection",
                "selected": false
            },
            {
                "source": "Prompt-x4UbV",
                "target": "OpenAIModel-x9EFs",
                "sourceHandle": "{Å“baseClassesÅ“:[Å“TextÅ“,Å“objectÅ“,Å“strÅ“],Å“dataTypeÅ“:Å“PromptÅ“,Å“idÅ“:Å“Prompt-x4UbVÅ“}",
                "targetHandle": "{Å“fieldNameÅ“:Å“input_valueÅ“,Å“idÅ“:Å“OpenAIModel-x9EFsÅ“,Å“inputTypesÅ“:[Å“TextÅ“],Å“typeÅ“:Å“strÅ“}",
                "id": "reactflow__edge-Prompt-x4UbV{Å“baseClassesÅ“:[Å“TextÅ“,Å“objectÅ“,Å“strÅ“],Å“dataTypeÅ“:Å“PromptÅ“,Å“idÅ“:Å“Prompt-x4UbVÅ“}-OpenAIModel-x9EFs{Å“fieldNameÅ“:Å“input_valueÅ“,Å“idÅ“:Å“OpenAIModel-x9EFsÅ“,Å“inputTypesÅ“:[Å“TextÅ“],Å“typeÅ“:Å“strÅ“}",
                "data": {
                    "targetHandle": {
                        "fieldName": "input_value",
                        "id": "OpenAIModel-x9EFs",
                        "inputTypes": [
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Text",
                            "object",
                            "str"
                        ],
                        "dataType": "Prompt",
                        "id": "Prompt-x4UbV"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 stroke-connection",
                "selected": false
            },
            {
                "source": "OpenAIModel-x9EFs",
                "target": "ChatOutput-8Ougj",
                "sourceHandle": "{Å“baseClassesÅ“:[Å“TextÅ“,Å“objectÅ“,Å“strÅ“],Å“dataTypeÅ“:Å“OpenAIModelÅ“,Å“idÅ“:Å“OpenAIModel-x9EFsÅ“}",
                "targetHandle": "{Å“fieldNameÅ“:Å“input_valueÅ“,Å“idÅ“:Å“ChatOutput-8OugjÅ“,Å“inputTypesÅ“:[Å“TextÅ“],Å“typeÅ“:Å“strÅ“}",
                "id": "reactflow__edge-OpenAIModel-x9EFs{Å“baseClassesÅ“:[Å“TextÅ“,Å“objectÅ“,Å“strÅ“],Å“dataTypeÅ“:Å“OpenAIModelÅ“,Å“idÅ“:Å“OpenAIModel-x9EFsÅ“}-ChatOutput-8Ougj{Å“fieldNameÅ“:Å“input_valueÅ“,Å“idÅ“:Å“ChatOutput-8OugjÅ“,Å“inputTypesÅ“:[Å“TextÅ“],Å“typeÅ“:Å“strÅ“}",
                "data": {
                    "targetHandle": {
                        "fieldName": "input_value",
                        "id": "ChatOutput-8Ougj",
                        "inputTypes": [
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Text",
                            "object",
                            "str"
                        ],
                        "dataType": "OpenAIModel",
                        "id": "OpenAIModel-x9EFs"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 stroke-connection",
                "selected": false
            },
            {
                "source": "MemoryComponent-6sJMc",
                "sourceHandle": "{Å“baseClassesÅ“:[Å“strÅ“,Å“objectÅ“,Å“TextÅ“],Å“dataTypeÅ“:Å“MemoryComponentÅ“,Å“idÅ“:Å“MemoryComponent-6sJMcÅ“}",
                "target": "Prompt-x4UbV",
                "targetHandle": "{Å“fieldNameÅ“:Å“contextÅ“,Å“idÅ“:Å“Prompt-x4UbVÅ“,Å“inputTypesÅ“:[Å“DocumentÅ“,Å“BaseOutputParserÅ“,Å“TextÅ“,Å“RecordÅ“],Å“typeÅ“:Å“strÅ“}",
                "data": {
                    "targetHandle": {
                        "fieldName": "context",
                        "id": "Prompt-x4UbV",
                        "inputTypes": [
                            "Document",
                            "BaseOutputParser",
                            "Text",
                            "Record"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "str",
                            "object",
                            "Text"
                        ],
                        "dataType": "MemoryComponent",
                        "id": "MemoryComponent-6sJMc"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 stroke-connection",
                "id": "reactflow__edge-MemoryComponent-6sJMc{Å“baseClassesÅ“:[Å“strÅ“,Å“objectÅ“,Å“TextÅ“],Å“dataTypeÅ“:Å“MemoryComponentÅ“,Å“idÅ“:Å“MemoryComponent-6sJMcÅ“}-Prompt-x4UbV{Å“fieldNameÅ“:Å“contextÅ“,Å“idÅ“:Å“Prompt-x4UbVÅ“,Å“inputTypesÅ“:[Å“DocumentÅ“,Å“BaseOutputParserÅ“,Å“TextÅ“,Å“RecordÅ“],Å“typeÅ“:Å“strÅ“}"
            }
        ],
        "viewport": {
            "x": 209.8178052590469,
            "y": -166.46748946641753,
            "zoom": 0.3680567155420431
        }
    },
    "description": "This project can be used as a starting point for building a Chat experience with user specific memory. You can set a different Session ID to start a new message history.",
    "name": "Conversation with Memory",
    "last_tested_version": "1.0.0a0",
    "is_component": false
}